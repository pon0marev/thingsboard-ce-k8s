
#
# Copyright Â© 2016-2023 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: tb-vc-executor-config
  namespace: thingsboard
  labels:
    name: tb-vc-executor-config
data:
  conf: |
    export JAVA_OPTS="$JAVA_OPTS -Xlog:gc*,heap*,age*,safepoint=debug:file=/var/log/tb-vc-executor/${TB_SERVICE_ID}-gc.log:time,uptime,level,tags:filecount=10,filesize=10M"
    export JAVA_OPTS="$JAVA_OPTS -XX:+IgnoreUnrecognizedVMOptions -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/tb-vc-executor/${TB_SERVICE_ID}-heapdump.bin"
    export JAVA_OPTS="$JAVA_OPTS -XX:-UseBiasedLocking -XX:+UseTLAB -XX:+ResizeTLAB -XX:+PerfDisableSharedMem -XX:+UseCondCardMark"
    export JAVA_OPTS="$JAVA_OPTS -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:MaxTenuringThreshold=10"
    export JAVA_OPTS="$JAVA_OPTS -XX:+ExitOnOutOfMemoryError"
    export LOG_FILENAME=tb-vc-executor.out
    export LOADER_PATH=/usr/share/tb-vc-executor/conf
  logback: |
    <!DOCTYPE configuration>
    <configuration scan="true" scanPeriod="10 seconds">

        <appender name="fileLogAppender"
                  class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/tb-vc-executor/${TB_SERVICE_ID}/tb-vc-executor.log</file>
            <rollingPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/tb-vc-executor/${TB_SERVICE_ID}/tb-vc-executor.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <maxFileSize>100MB</maxFileSize>
                <maxHistory>7</maxHistory>
                <totalSizeCap>700MB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>

        <logger name="org.thingsboard.server" level="INFO" />

        <logger name="com.microsoft.azure.servicebus.primitives.CoreMessageReceiver" level="OFF" />
        <logger name="org.apache.kafka.common.utils.AppInfoParser" level="WARN"/>
        <logger name="org.apache.kafka.clients" level="WARN"/>

        <root level="INFO">
            <appender-ref ref="fileLogAppender"/>
            <appender-ref ref="STDOUT"/>
        </root>

    </configuration>


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tb-vc-executor
  namespace: thingsboard
spec:
  serviceName: tb-vc-executor
  replicas: 1
  selector:
    matchLabels:
      app: tb-vc-executor
  template:
    metadata:
      labels:
        app: tb-vc-executor
    spec:
      nodeSelector:
        role: tb-node
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - tb-vc-executor
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 799
        runAsNonRoot: true
        fsGroup: 799
      volumes:
        - name: tb-vc-executor-config
          configMap:
            name: tb-vc-executor-config
            items:
              - key: conf
                path:  tb-vc-executor.conf
              - key: logback
                path:  logback.xml
        - name: tb-vc-executor-logs
          emptyDir: {}
      containers:
        - name: vc-executor
          imagePullPolicy: Always
          image: thingsboard/tb-vc-executor:3.5.1
          ports:
            - containerPort: 8081
              name: http
          resources:
            limits:
              cpu: "500m"
              memory: 1000Mi
            requests:
              cpu: "200m"
              memory: 200Mi
          env:
            - name: TB_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZOOKEEPER_ENABLED
              value: "true"
            - name: ZOOKEEPER_URL
              value: "zookeeper:2181"
          envFrom:
            - configMapRef:
                name: tb-kafka-config
          volumeMounts:
            - mountPath: /config
              name: tb-vc-executor-config
            - mountPath: /var/log/tb-vc-executor
              name: tb-vc-executor-logs
          readinessProbe:
            httpGet:
              path: /actuator
              port: http
          livenessProbe:
            httpGet:
              path: /actuator
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 10
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: tb-vc-executor
  namespace: thingsboard
spec:
  type: ClusterIP
  selector:
    app: tb-vc-executor
  ports:
    - port: 8081
      name: http